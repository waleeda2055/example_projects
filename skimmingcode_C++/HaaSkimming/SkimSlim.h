//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Thu Dec 20 17:20:26 2018 by ROOT version 6.14/06
// from TTree tree_NoSys/tree_NoSys
// found on file: ../user.chhayes.ttbardilep.410472.e6348_e5984_s3126_r9364_r9315_p3639_v2_NoSys_s1_t1_tree.root/user.chhayes.16024312._000012.tree.root
//////////////////////////////////////////////////////////

#ifndef SkimSlim_h
#define SkimSlim_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>
#include <TRandom3.h>
#include <iostream>
#include <vector>
#include <map>
#include "HaaSkimming/CutManager.h"

using namespace std;

class BDTConfig {
public :
   TString weightfile;
   TString name;
   BDTConfig(TString, TString);
   BDTConfig(){};
};

BDTConfig::BDTConfig(TString a, TString b){
  weightfile = a;
  name = b;
}

struct TheoryWeightSyst {
  map<int,double> SOW;
  float weight;
  TString CBKName;
  TString weightName;
  float finalWeight;
};


class SkimSlim {
public :
   bool		   createRadDown;
   bool            createRadUp;
   map<TString,TheoryWeightSyst> theoryMap;
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   TObjArray*      m_branchList;
   Int_t           fCurrent; //!current Tree number in a TChain
   TFile*	   outputfile;
   TString	   newTreeName1;
   TString	   newTreeName2;
   TString	   newTreeName3;
   map<int,double> sumOfWeights;
   map<int,TH1*>   mapOfHists;
   map<int,TH1*>   mapOfUnweightedHists;
   vector<float>   BDT_outputs;
   vector<BDTConfig> BDT_configs;
   float	   lumiWeight;
   float 	   lumi;
   float 	   event_weight;
   double	   eventWeightCuts;
   bool		   isData;
   int 		   maxEvents;
   bool	 	   write0Tree;
   bool 	   write1Tree;
   bool		   isSignal;
   bool		   isNominal;
   bool	 	   doIsolation;
   bool		   doCMS; 
//Variables for output tree (needed only for vectors)
   int 		   isTrueMu1;
   int             isTrueMu2;
   int             isTrueElec;
   int             isFakeMu1;
   int             isFakeMu2;
   int             isFakeElec;
   int             isPhoConvMu1;
   int		   isPhoConvMu2;
   int 		   isPhoConvElec;   
   int             isSignalMu1;
   int             isSignalMu2;
   int             muIso1;
   int             muIso2;
   int		   njetcentral30;
   int 		   njetcentral20;
   int		   njetfwd30;
   int 		   njetfwd20;
   int 		   nbjet30_60;
   int 		   nbjet30_77;
   bool		   isOS;
   int 		   isZbb;
   int 		   passSingleMuon;
   int		   passDimuon;
   int             passDilep;
   int             passSingleElec;
   int             passAsym;
   Float_t         dRm1b1;
   Float_t         dRm2b1;
   Float_t         dRm1b2;
   Float_t         dRm2b2;
   Float_t         dRm1m2;
   Float_t         dRb1b2;
   Float_t         dRMmmMbbkl;
   float 	   diffRmRb;
   float 	   dRmb1;
   float 	   dRmb2;
   float 	   dRmb3;
   float 	   dRmb4;
   float 	   mdRmb1;
   float 	   mdRmb2;
   float 	   mdRmb3;
   float 	   mdRmb4;
   float 	   centrality;
   float 	   centralityAll;
   float	   dPhimumujj;
   float 	   Ht;
   float 	   HtAll;
   float	   higgs_pt;
   float           mu1Pt;
   float           mu2Pt;
   float           mu1Eta;
   float           mu2Eta;
   float           mu1E;
   float           mu2E;
   float           mu1Phi;
   float           mu2Phi;
   float 	   bjet1_pt;
   float 	   bjet2_pt;
   float 	   bjet1_eta;
   float 	   bjet2_eta;
   float 	   bjet1_phi;
   float 	   bjet2_phi;
   float 	   bjet1_m;
   float 	   bjet2_m;
   float 	   bjet1_e;
   float 	   bjet2_e;
   float 	   bjet1Jvt;
   float 	   bjet2Jvt;
   float 	   bjet1Eff;
   float 	   bjet2Eff;
   float 	   jet1Pt;
   float 	   jet1Eta;
   float 	   jet1Phi;
   float 	   jet1M;
   float 	   jet1E;
   float 	   jet1Jvt;
   float 	   jet1Eff;
   float 	   jet2Pt;
   float 	   jet2Eta;
   float 	   jet2Phi;
   float 	   jet2M;
   float 	   jet2E;
   float 	   jet2Jvt;
   float 	   jet2Eff;
   float           klfit_bjet1_pt;
   float           klfit_bjet2_pt;
   float           klfit_bjet1_eta;
   float           klfit_bjet2_eta;
   float           klfit_bjet1_phi;
   float           klfit_bjet2_phi;
   float           klfit_bjet1_m;
   float           klfit_bjet2_m;
   float           klfit_bjet1_e;
   float           klfit_bjet2_e;
   float	   dibjet_m;
   float	   SF_SL;
   float	   SF_DL;
   float 	   SF_SLORDL;
float SF_SL_MUON_EFF_TrigStatUncertainty__1down;
float SF_SL_MUON_EFF_TrigStatUncertainty__1up;
float SF_SL_MUON_EFF_TrigSystUncertainty__1down;
float SF_SL_MUON_EFF_TrigSystUncertainty__1up;
float SF_DL_MUON_EFF_TrigStatUncertainty__1down;
float SF_DL_MUON_EFF_TrigStatUncertainty__1up;
float SF_DL_MUON_EFF_TrigSystUncertainty__1down;
float SF_DL_MUON_EFF_TrigSystUncertainty__1up;
float SF_SLORDLMUON_EFF_TrigStatUncertainty__1down;
float SF_SLORDLMUON_EFF_TrigStatUncertainty__1up;
float SF_SLORDLMUON_EFF_TrigSystUncertainty__1down;
float SF_SLORDLMUON_EFF_TrigSystUncertainty__1up;
   CutManager      *cutManager;
   //waleed edit 
   float        dimuonM_mu;
   float 	hplus_m; 
   float        Wmass;
   float        elec1Pt;
   float        elec1Eta;
   float        elec1E;
   float        elec1Phi;   
   float        dRMmmW;
   float        dRMmme1;      
   float        dRMmmb1;
   float        dRMmmb2; 
   float        dRMmmMbb; 
   float 	hplus_m2; 
   float        Wmass2;
   float        dRMmmW2; 
   float 	dRm1e1; 
   float	dRm2e1;
   float  	m_ct; 
   float 	Mmu1e_os;
   float        Mmu2e_os; 
   float 	Mmu1e_ss;
   float        Mmu2e_ss;
   float 	Mmu1e;
   float	Mmu2e; 
   vector<int>  a_01;
   vector<int>  a_12;
   vector<int>  a_02;
   vector<int>  n_correctassign;
   float        dRm1m3;
   float        dRm2m3;
   float        mu3Pt;
   float        mu3Eta;
   float        mu3Phi;
   float        mu3E;
   float        isCorrect; 
   float        dRm1m3_tru;
   float        dRm2m3_tru; 
   float        dRm1m2_tru;
   float        mT_W; 
   float        mT_W_tru;
   float 	mT_W_e1; 
   float        mu1Charge;
   float        mu2Charge; 
   float        elec1Charge; 
   float        pTfrac_mu2_mu1;
   float 	pTfrac_e1_mu1;
   float        pTfrac_mu2_e1; 
   float        pTfrac_mu2_mu1_m2eOS;
   float        pTfrac_mu2_mu1_m2eSS;
   float        pTfrac_e1_mu1_m1eSS;
   float        pTfrac_e1_mu1_m1eOS;
   float        pTfrac_e1_mu1_m2eSS;
   float        pTfrac_e1_mu1_m2eOS;

   
// Fixed size dimensions of array or collections stored in the TTree if any.

   // Declaration of leaf types of original tree
   
   Double_t        trigWeight_singleMuonTrig;
   Bool_t          trigMatch_singleMuonTrig;
   Double_t        trigWeight_singleElecTrig;
   Bool_t          trigMatch_singleElecTrig;
   Double_t        trigWeight_symdiMuonTrig;
   Bool_t          trigMatch_symdiMuonTrig;
   Double_t        trigWeight_asymdiMuonTrig;
   Bool_t          trigMatch_asymdiMuonTrig;
   Double_t        trigWeight_symdiElecTrig;
   Bool_t          trigMatch_symdiElecTrig;
   Double_t        trigWeight_symdiLepTrig;
   Bool_t          trigMatch_symdiLepTrig;
   Double_t        trigWeight_asymdiLepTrig;
   Bool_t          trigMatch_asymdiLepTrig;
   Bool_t          HLT_e24_lhmedium_L1EM20VH;
   Bool_t          HLT_e24_lhvloose_nod0;
   Bool_t          HLT_e24_lhtight_nod0_ivarloose;
   Bool_t          HLT_e26_lhtight_nod0_ivarlooseHLT_e60_medium;
   Bool_t          HLT_e60_lhmedium;
   Bool_t          HLT_e60_lhmedium_nod0;
   Bool_t          HLT_e120_lhloose;
   Bool_t          HLT_e140_lhloose_nod0;
   Bool_t          HLT_e300_etcut;
   Bool_t          HLT_2e15_lhvloose_nod0_L12EM13VH;
   Bool_t          HLT_2e17_lhvloose_nod0_L12EM15VHI;
   Bool_t          HLT_2e24_lhvloose_nod0;
   Bool_t          HLT_e7_lhmedium_mu24;
   Bool_t          HLT_e7_lhmedium_nod0_mu24;
   Bool_t          HLT_e17_lhloose_mu14;
   Bool_t          HLT_e17_lhloose_nod0_mu14;
   Bool_t          HLT_e24_lhmedium_L1EM20VHI_mu8noL1;
   Bool_t          HLT_e26_lhmedium_nod0_mu8noL1;
   Bool_t          HLT_e26_lhmedium_nod0_L1EM22VHI_mu8noL1;
   Bool_t          HLT_mu20_iloose_L1MU15;
   Bool_t          HLT_mu24_iloose;
   Bool_t          HLT_mu24_iloose_L1MU15;
   Bool_t          HLT_mu24_ivarloose_L1MU15;
   Bool_t          HLT_mu24_imedium;
   Bool_t          HLT_mu24_ivarmedium;
   Bool_t          HLT_mu26_ivarmedium;
   Bool_t          HLT_mu40;
   Bool_t          HLT_mu50;
   Bool_t          HLT_mu60;
   Bool_t          HLT_2mu10;
   Bool_t          HLT_2mu14;
   Bool_t          HLT_mu18_mu8noL1;
   Bool_t          HLT_mu20_mu8noL1;
   Bool_t          HLT_mu22_mu8noL1;
   Int_t           TrigCatHaa;

   Int_t           nMuons_base;
   Int_t           nMuons_signal;
   vector<int>     *isSignalMu;
   vector<int>     *muType;
   vector<int>     *muOrigin;
   vector<int>     *elecType;
   vector<int>     *elecOrigin;   

   Int_t           nElectrons_base;
   Int_t           nElectrons_signal;
   Bool_t          isBadMuon;
   Int_t           nVtx;
   Float_t         mu;
   Int_t           nJet20;
   Int_t           nBJet20_MV2c10_FixedCutBEff_77;
   Int_t           nBJet20_MV2c10_FixedCutBEff_60;
   Int_t           nBJet20_MV2c10_FixedCutBEff_70;
   Int_t           nBJet20_MV2c10_FixedCutBEff_85;
   vector<float>   *muPt;
   vector<float>   *muEta;
   vector<float>   *muPhi;
   vector<float>   *muM;
   vector<float>   *muE;
   vector<int>     *muIso;
   vector<float>   *muCharge;
   Float_t         dimuonPt;
   Float_t         dimuonEta;
   Float_t         dimuonPhi;
   Float_t         dimuonM;
   Float_t         dimuonE;
   vector<float>   *elecPt;
   vector<float>   *elecEta;
   vector<float>   *elecPhi;
   vector<float>   *elecM;
   vector<float>   *elecE;
   vector<int>     *elecIso;
   vector<float>   *elecCharge;
   Float_t         dielecPt;
   Float_t         dielecEta;
   Float_t         dielecPhi;
   Float_t         dielecM;
   Float_t         dielecE;
   Float_t         emuPt;
   Float_t         emuEta;
   Float_t         emuPhi;
   Float_t         emuM;
   Float_t         emuE;
   vector<float>   *jetPt;
   vector<float>   *jetEta;
   vector<float>   *jetPhi;
   vector<float>   *jetM;
   vector<float>   *jetE;
   vector<float>   *jetJvt;
   vector<float>   *jetMV2c10;
   vector<float>   *trkjetPt;
   vector<float>   *trkjetEta;
   vector<float>   *trkjetPhi;
   vector<float>   *trkjetM;
   vector<float>   *trkjetE;
   vector<float>   *trkjetNTrks500;
   vector<float>   *trkjetNTrks1000;
   vector<float>   *trkjetMV2c10;
   Float_t         dijetPt;
   Float_t         dijetEta;
   Float_t         dijetPhi;
   Float_t         dijetM;
   Float_t         dijetE;
   vector<float>   *bjetPt;
   vector<float>   *bjetEta;
   vector<float>   *bjetPhi;
   vector<float>   *bjetM;
   vector<float>   *bjetE;
   vector<float>   *bjetJvt;
   vector<float>   *bjetMV2c10;
   Float_t         dibjetPt;
   Float_t         dibjetEta;
   Float_t         dibjetPhi;
   Float_t         dibjetM;
   Float_t         dibjetE;
   Float_t         met_met;
   Float_t         met_px;
   Float_t         met_py;
   Float_t         met_phi;
   Float_t         TST_Et;
   Float_t         TST_Phi;
   Float_t         met_track_Et;
   Float_t         met_track_Phi;
   Float_t         met_muons_invis_Et;
   Float_t         met_muons_invis_Phi;
   Float_t         mu1QOverP;
   Float_t         mu1QOverPErr;
   Float_t         mu2QOverP;
   Float_t         mu2QOverPErr;
   
   Double_t        pileupWeight;
   Double_t        leptonWeight;
   Double_t        eventWeight;
   Double_t        jvtWeight;
   Double_t        bTagWeight;
   Double_t        genWeight;
   Double_t        genWeightUp;
   Double_t        genWeightDown;
   Double_t        SherpaVjetsNjetsWeight;
   Double_t        ttbarNNLOWeight;
   Double_t        ttbarNNLOWeightUp;
   Double_t        ttbarNNLOWeightDown;
   Float_t         truthTopPt;
   Float_t         truthAntiTopPt;
   Float_t         truthTtbarPt;
   Float_t         truthTtbarM;
   Float_t         x1;
   Float_t         x2;
   Float_t         pdf1;
   Float_t         pdf2;
   Float_t         scalePDF;
   Int_t           id1;
   Int_t           id2;
   Int_t           lep1Type;
   Int_t           lep1Origin;
   Int_t           lep2Type;
   Int_t           lep2Origin;
   Float_t         ptcone20_1;
   Bool_t          IsoTight_1;
   Float_t         ptcone20_2;
   Bool_t          IsoTight_2;
   Float_t         GenHt;
   Float_t         Gen_ET;
   ULong64_t       PRWHash;
   ULong64_t       EventNumber;
   Float_t         xsec;
   Float_t         TrueHt;
   Int_t           DatasetNumber;
   Int_t           RunNumber;
   Int_t           RandomRunNumber;
   Int_t           FS;
float       leptonWeight_MUON_EFF_BADMUON_STAT__1down;
float       leptonWeight_MUON_EFF_BADMUON_STAT__1up;
float       leptonWeight_MUON_EFF_BADMUON_SYS__1down;
float       leptonWeight_MUON_EFF_BADMUON_SYS__1up;
float       leptonWeight_MUON_EFF_ISO_STAT__1down;
float       leptonWeight_MUON_EFF_ISO_STAT__1up;
float       leptonWeight_MUON_EFF_ISO_SYS__1down;
float       leptonWeight_MUON_EFF_ISO_SYS__1up;
float       leptonWeight_MUON_EFF_RECO_STAT__1down;
float       leptonWeight_MUON_EFF_RECO_STAT__1up;
float       leptonWeight_MUON_EFF_RECO_STAT_LOWPT__1down;
float       leptonWeight_MUON_EFF_RECO_STAT_LOWPT__1up;
float       leptonWeight_MUON_EFF_RECO_SYS__1down;
float       leptonWeight_MUON_EFF_RECO_SYS__1up;
float       leptonWeight_MUON_EFF_RECO_SYS_LOWPT__1down;
float       leptonWeight_MUON_EFF_RECO_SYS_LOWPT__1up;
float       leptonWeight_MUON_EFF_TTVA_STAT__1down;
float       leptonWeight_MUON_EFF_TTVA_STAT__1up;
float       leptonWeight_MUON_EFF_TTVA_SYS__1down;
float       leptonWeight_MUON_EFF_TTVA_SYS__1up;
float       bTagWeight_FT_EFF_B_systematics__1down;
float       bTagWeight_FT_EFF_B_systematics__1up;
float       bTagWeight_FT_EFF_C_systematics__1down;
float       bTagWeight_FT_EFF_C_systematics__1up;
float       bTagWeight_FT_EFF_Light_systematics__1down;
float       bTagWeight_FT_EFF_Light_systematics__1up;
float       bTagWeight_FT_EFF_extrapolation__1down;
float       bTagWeight_FT_EFF_extrapolation__1up;
float       bTagWeight_FT_EFF_extrapolation_from_charm__1down;
float       bTagWeight_FT_EFF_extrapolation_from_charm__1up;
float       jvtWeight_JET_JvtEfficiency__1down;
float       jvtWeight_JET_JvtEfficiency__1up;
float       pileupWeightUp;
float       pileupWeightDown;


   Float_t         klfit_dijet_pt;
   Float_t         klfit_dijet_eta;
   Float_t         klfit_dijet_phi;
   Float_t         klfit_dijet_e;
   Float_t         klfit_dijet_m;
   Float_t         klfit_dilepton_pt;
   Float_t         klfit_dilepton_eta;
   Float_t         klfit_dilepton_phi;
   Float_t         klfit_dilepton_e;
   Float_t         klfit_dilepton_m;
   Float_t         noKL_dijet_pt;
   Float_t         noKL_dijet_eta;
   Float_t         noKL_dijet_phi;
   Float_t         noKL_dijet_e;
   Float_t         noKL_dijet_m;
   Float_t         noKL_dilepton_pt;
   Float_t         noKL_dilepton_eta;
   Float_t         noKL_dilepton_phi;
   Float_t         noKL_dilepton_e;
   Float_t         noKL_dilepton_m;
   Float_t         klfit_loglikelihood;
   Bool_t          klfit_minuitdidnotconverge;
   Int_t           klfit_leptonid;
   Int_t           klfit_nbtags;
   Int_t           klfit_istrkjet;
   Float_t         klfit_jet1_pt;
   Float_t         klfit_jet1_eta;
   Float_t         klfit_jet1_phi;
   Float_t         klfit_jet1_e;
   Float_t         klfit_jet1_m;
   Bool_t          klfit_jet1_isbjet;
   Bool_t          klfit_jet1_istrkjet;
   Float_t         noKL_jet1_pt;
   Float_t         noKL_jet1_eta;
   Float_t         noKL_jet1_phi;
   Float_t         noKL_jet1_e;
   Float_t         noKL_jet1_m;
   Bool_t          noKL_jet1_isbjet;
   Bool_t          noKL_jet1_istrkjet;
   Float_t         klfit_jet2_pt;
   Float_t         klfit_jet2_eta;
   Float_t         klfit_jet2_phi;
   Float_t         klfit_jet2_e;
   Float_t         klfit_jet2_m;
   Bool_t          klfit_jet2_isbjet;
   Bool_t          klfit_jet2_istrkjet;
   Float_t         noKL_jet2_pt;
   Float_t         noKL_jet2_eta;
   Float_t         noKL_jet2_phi;
   Float_t         noKL_jet2_e;
   Float_t         noKL_jet2_m;
   Bool_t          noKL_jet2_isbjet;
   Bool_t          noKL_jet2_istrkjet;
   Float_t         klfit_jjll_pt;
   Float_t         klfit_jjll_eta;
   Float_t         klfit_jjll_phi;
   Float_t         klfit_jjll_e;
   Float_t         klfit_jjll_m;
   Float_t         noKL_jjll_pt;
   Float_t         noKL_jjll_eta;
   Float_t         noKL_jjll_phi;
   Float_t         noKL_jjll_e;
   Float_t         noKL_jjll_m;
   float 	   leadFwdJetPt;
   float 	   leadFwdJetEta;
   float           leadCJetPt;
   float           leadCJetEta;
   float           leadBJetPt;
   float           leadBJetEta;
   vector<float>   *mutrigMCEff_singleMuonTrig;
   vector<float>   *mutrigDataEff_singleMuonTrig;
   vector<float>   *mutrigMCEff_singleMuonTrig_MUON_EFF_TrigStatUncertainty__1down;
   vector<float>   *mutrigDataEff_singleMuonTrig_MUON_EFF_TrigStatUncertainty__1down;
   vector<float>   *mutrigMCEff_singleMuonTrig_MUON_EFF_TrigStatUncertainty__1up;
   vector<float>   *mutrigDataEff_singleMuonTrig_MUON_EFF_TrigStatUncertainty__1up;
   vector<float>   *mutrigMCEff_singleMuonTrig_MUON_EFF_TrigSystUncertainty__1down;
   vector<float>   *mutrigDataEff_singleMuonTrig_MUON_EFF_TrigSystUncertainty__1down;
   vector<float>   *mutrigMCEff_singleMuonTrig_MUON_EFF_TrigSystUncertainty__1up;
   vector<float>   *mutrigDataEff_singleMuonTrig_MUON_EFF_TrigSystUncertainty__1up;
   vector<float>   *mutrigMCEff_symdiMuonTrig;
   vector<float>   *mutrigDataEff_symdiMuonTrig;
   vector<float>   *mutrigMCEff_symdiMuonTrig_MUON_EFF_TrigStatUncertainty__1down;
   vector<float>   *mutrigDataEff_symdiMuonTrig_MUON_EFF_TrigStatUncertainty__1down;
   vector<float>   *mutrigMCEff_symdiMuonTrig_MUON_EFF_TrigStatUncertainty__1up;
   vector<float>   *mutrigDataEff_symdiMuonTrig_MUON_EFF_TrigStatUncertainty__1up;
   vector<float>   *mutrigMCEff_symdiMuonTrig_MUON_EFF_TrigSystUncertainty__1down;
   vector<float>   *mutrigDataEff_symdiMuonTrig_MUON_EFF_TrigSystUncertainty__1down;
   vector<float>   *mutrigMCEff_symdiMuonTrig_MUON_EFF_TrigSystUncertainty__1up;
   vector<float>   *mutrigDataEff_symdiMuonTrig_MUON_EFF_TrigSystUncertainty__1up;
   vector<float>   *mutrigMCEff_symdiLepTrig; //for new diLep trigs
   vector<float>   *mutrigDataEff_symdiLepTrig;

   SkimSlim();
   virtual ~SkimSlim();
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   void SetBranchTree(TTree *tree, int ntag);
   bool passSelection();
   void orderMuonPt();
   void orderAngles(vector<float> &dR, vector<float> &dRm);
   void swapVectorOrder(vector <int>* muStuff, uint j);
   void swapVectorOrder(vector <float>* muStuff, uint j);
   void fillRightBin(TString cut);
   void setBranchAddress(const std::string& bname, void* add);
   bool isPromptMuon(int, int);
   bool isPromptElec(int, int);
   void correctXsec();
   bool isNonPromptMuon(int, int);
   bool isNonPromptElec(int,int);
   bool PhoConvMu(int, int);
   bool PhoConvElec(int, int);
   bool removeOverlap();
   bool isSampleZbb();
   float computeEffAND(float, float);
   float computeEffOR(float, float);
   float computeSFSL(vector<float>*, vector<float>*);
   float computeSFDL(vector<float>*, vector<float>*);
   float computeSFSLORDL(vector<float>*, vector<float>*, vector<float>*, vector<float>*);
   void  computeSF();
   void divideWeights(float&,float);
};

#endif


